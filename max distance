import java.util.*;

public class Solution {
    public int maximumGap(final List<Integer> A) {
        int n = A.size();
        if (n <= 1) return 0;

   
        int[] leftMin = new int[n];
        int[] rightMax = new int[n];

        leftMin[0] = A.get(0);
        for (int i = 1; i < n; i++) {
            leftMin[i] = Math.min(leftMin[i - 1], A.get(i));
        }

        
        rightMax[n - 1] = A.get(n - 1);
        for (int i = n - 2; i >= 0; i--) {
            rightMax[i] = Math.max(rightMax[i + 1], A.get(i));
        }

        int i = 0, j = 0, maxDiff = 0;
        while (i < n && j < n) {
            if (leftMin[i] <= rightMax[j]) {
                maxDiff = Math.max(maxDiff, j - i);
                j++;
            } else {
                i++;
            }
        }

        return maxDiff;
    }
}
